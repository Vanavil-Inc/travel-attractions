/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/** @type {?} */
const get = require("lodash/get");
import { Component, Input } from "@angular/core";
import { bem } from "../utils";
export class NgAisHighlight {
    constructor() {
        this.tagName = "em";
        this.cx = bem("Highlight");
    }
    /**
     * @return {?}
     */
    get content() {
        if (this.attribute === "highlighted") {
            return this.hit.highlighted
                ? this.replaceWithTagName(this.hit.highlighted)
                : this.hit.label;
        }
        if (this.hit.hasOwnProperty("_highlightResult")) {
            /** @type {?} */
            const attributeHighlighted = get(this.hit._highlightResult, this.attribute);
            // check that the attributeHighlighted is a string
            if (attributeHighlighted !== undefined &&
                typeof attributeHighlighted.value === "string") {
                return this.replaceWithTagName(attributeHighlighted.value);
            }
        }
        /** @type {?} */
        const fallback = get(this.hit, this.attribute);
        if (!fallback) {
            console.warn(`Could not find attribute [${this.attribute}] into hit object, will display an empty string.`);
            return "";
        }
        return fallback;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    replaceWithTagName(value) {
        return value
            .replace(new RegExp("<em>", "g"), `<${this.tagName} class="${this.cx("highlighted")}">`)
            .replace(new RegExp("</em>", "g"), `</${this.tagName}>`);
    }
}
NgAisHighlight.decorators = [
    { type: Component, args: [{
                selector: "ais-highlight",
                template: `<span [class]="cx()" [innerHtml]="content"></span>`
            },] },
];
NgAisHighlight.propDecorators = {
    attribute: [{ type: Input }],
    hit: [{ type: Input }],
    tagName: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgAisHighlight.prototype.attribute;
    /** @type {?} */
    NgAisHighlight.prototype.hit;
    /** @type {?} */
    NgAisHighlight.prototype.tagName;
    /** @type {?} */
    NgAisHighlight.prototype.cx;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1pbnN0YW50c2VhcmNoLyIsInNvdXJjZXMiOlsiaGlnaGxpZ2h0L2hpZ2hsaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNsQyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTS9CLE1BQU07O3VCQUd1QixJQUFJO2tCQUUxQixHQUFHLENBQUMsV0FBVyxDQUFDOzs7OztJQUVyQixJQUFJLE9BQU87UUFDVCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssYUFBYSxFQUFFO1lBQ3BDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXO2dCQUN6QixDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDO2dCQUMvQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7U0FDcEI7UUFFRCxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLGtCQUFrQixDQUFDLEVBQUU7O1lBQy9DLE1BQU0sb0JBQW9CLEdBQUcsR0FBRyxDQUM5QixJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUN6QixJQUFJLENBQUMsU0FBUyxDQUNmLENBQUM7O1lBR0YsSUFDRSxvQkFBb0IsS0FBSyxTQUFTO2dCQUNsQyxPQUFPLG9CQUFvQixDQUFDLEtBQUssS0FBSyxRQUFRLEVBQzlDO2dCQUNBLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzVEO1NBQ0Y7O1FBRUQsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixPQUFPLENBQUMsSUFBSSxDQUNWLDZCQUNFLElBQUksQ0FBQyxTQUNQLGtEQUFrRCxDQUNuRCxDQUFDO1lBRUYsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUVELE9BQU8sUUFBUSxDQUFDO0tBQ2pCOzs7OztJQUVELGtCQUFrQixDQUFDLEtBQWE7UUFDOUIsT0FBTyxLQUFLO2FBQ1QsT0FBTyxDQUNOLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFDdkIsSUFBSSxJQUFJLENBQUMsT0FBTyxXQUFXLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDdEQ7YUFDQSxPQUFPLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7S0FDNUQ7OztZQXRERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFFBQVEsRUFBRSxvREFBb0Q7YUFDL0Q7Ozt3QkFFRSxLQUFLO2tCQUNMLEtBQUs7c0JBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldCA9IHJlcXVpcmUoXCJsb2Rhc2gvZ2V0XCIpO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBiZW0gfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcImFpcy1oaWdobGlnaHRcIixcbiAgdGVtcGxhdGU6IGA8c3BhbiBbY2xhc3NdPVwiY3goKVwiIFtpbm5lckh0bWxdPVwiY29udGVudFwiPjwvc3Bhbj5gXG59KVxuZXhwb3J0IGNsYXNzIE5nQWlzSGlnaGxpZ2h0IHtcbiAgQElucHV0KCkgYXR0cmlidXRlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGhpdDogeyBfaGlnaGxpZ2h0UmVzdWx0Pzoge307IGxhYmVsPzogc3RyaW5nOyBoaWdobGlnaHRlZD86IHN0cmluZyB9O1xuICBASW5wdXQoKSB0YWdOYW1lOiBzdHJpbmcgPSBcImVtXCI7XG5cbiAgY3ggPSBiZW0oXCJIaWdobGlnaHRcIik7XG5cbiAgZ2V0IGNvbnRlbnQoKSB7XG4gICAgaWYgKHRoaXMuYXR0cmlidXRlID09PSBcImhpZ2hsaWdodGVkXCIpIHtcbiAgICAgIHJldHVybiB0aGlzLmhpdC5oaWdobGlnaHRlZFxuICAgICAgICA/IHRoaXMucmVwbGFjZVdpdGhUYWdOYW1lKHRoaXMuaGl0LmhpZ2hsaWdodGVkKVxuICAgICAgICA6IHRoaXMuaGl0LmxhYmVsO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmhpdC5oYXNPd25Qcm9wZXJ0eShcIl9oaWdobGlnaHRSZXN1bHRcIikpIHtcbiAgICAgIGNvbnN0IGF0dHJpYnV0ZUhpZ2hsaWdodGVkID0gZ2V0KFxuICAgICAgICB0aGlzLmhpdC5faGlnaGxpZ2h0UmVzdWx0LFxuICAgICAgICB0aGlzLmF0dHJpYnV0ZVxuICAgICAgKTtcblxuICAgICAgLy8gY2hlY2sgdGhhdCB0aGUgYXR0cmlidXRlSGlnaGxpZ2h0ZWQgaXMgYSBzdHJpbmdcbiAgICAgIGlmIChcbiAgICAgICAgYXR0cmlidXRlSGlnaGxpZ2h0ZWQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICB0eXBlb2YgYXR0cmlidXRlSGlnaGxpZ2h0ZWQudmFsdWUgPT09IFwic3RyaW5nXCJcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXBsYWNlV2l0aFRhZ05hbWUoYXR0cmlidXRlSGlnaGxpZ2h0ZWQudmFsdWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGZhbGxiYWNrID0gZ2V0KHRoaXMuaGl0LCB0aGlzLmF0dHJpYnV0ZSk7XG4gICAgaWYgKCFmYWxsYmFjaykge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBgQ291bGQgbm90IGZpbmQgYXR0cmlidXRlIFske1xuICAgICAgICAgIHRoaXMuYXR0cmlidXRlXG4gICAgICAgIH1dIGludG8gaGl0IG9iamVjdCwgd2lsbCBkaXNwbGF5IGFuIGVtcHR5IHN0cmluZy5gXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsbGJhY2s7XG4gIH1cblxuICByZXBsYWNlV2l0aFRhZ05hbWUodmFsdWU6IHN0cmluZykge1xuICAgIHJldHVybiB2YWx1ZVxuICAgICAgLnJlcGxhY2UoXG4gICAgICAgIG5ldyBSZWdFeHAoXCI8ZW0+XCIsIFwiZ1wiKSxcbiAgICAgICAgYDwke3RoaXMudGFnTmFtZX0gY2xhc3M9XCIke3RoaXMuY3goXCJoaWdobGlnaHRlZFwiKX1cIj5gXG4gICAgICApXG4gICAgICAucmVwbGFjZShuZXcgUmVnRXhwKFwiPC9lbT5cIiwgXCJnXCIpLCBgPC8ke3RoaXMudGFnTmFtZX0+YCk7XG4gIH1cbn1cbiJdfQ==