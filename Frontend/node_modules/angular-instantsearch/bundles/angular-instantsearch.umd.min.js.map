{"version":3,"sources":["null","ng://angular-instantsearch/utils.ts","ng://angular-instantsearch/base-widget.ts","ng://angular-instantsearch/version.ts","ng://angular-instantsearch/instantsearch/instantsearch.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.module.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.module.ts","ng://angular-instantsearch/current-refinements/current-refinements.ts","ng://angular-instantsearch/current-refinements/current-refinements.module.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu-item.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.module.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.module.ts","ng://angular-instantsearch/highlight/highlight.ts","ng://angular-instantsearch/highlight/highlight.module.ts","ng://angular-instantsearch/hits/hits.ts","ng://angular-instantsearch/hits/hits.module.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.module.ts","ng://angular-instantsearch/instantsearch/instantsearch.module.ts","ng://angular-instantsearch/menu/menu.ts","ng://angular-instantsearch/menu/menu.module.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.module.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.module.ts","ng://angular-instantsearch/pagination/pagination.ts","ng://angular-instantsearch/pagination/pagination.module.ts","ng://angular-instantsearch/range-slider/range-slider.ts","ng://angular-instantsearch/range-slider/range-slider.module.ts","ng://angular-instantsearch/refinement-list/refinement-list.ts","ng://angular-instantsearch/refinement-list/facets-search.ts","ng://angular-instantsearch/refinement-list/refinement-list.module.ts","ng://angular-instantsearch/search-box/search-box.ts","ng://angular-instantsearch/search-box/search-box.module.ts","ng://angular-instantsearch/sort-by/sort-by.ts","ng://angular-instantsearch/sort-by/sort-by.module.ts","ng://angular-instantsearch/rating-menu/rating-menu.ts","ng://angular-instantsearch/rating-menu/rating-menu.module.ts","ng://angular-instantsearch/stats/stats.ts","ng://angular-instantsearch/stats/stats.module.ts","ng://angular-instantsearch/toggle/toggle.ts","ng://angular-instantsearch/toggle/toggle.module.ts","ng://angular-instantsearch/range-input/range-input.ts","ng://angular-instantsearch/range-input/range-input.module.ts","ng://angular-instantsearch/panel/panel.ts","ng://angular-instantsearch/panel/panel.module.ts","ng://angular-instantsearch/configure/configure.ts","ng://angular-instantsearch/configure/configure.module.ts","ng://angular-instantsearch/create-ssr-algolia-client.ts","ng://angular-instantsearch/index.ts","ng://angular-instantsearch/parse-server-request.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","bem","widgetName","element","subElement","scoppedWidgetName","parseNumberInput","input","parseInt","noop","args","_i","BaseWidget","_this","state","isFirstRendering","Promise","resolve","then","cx","createWidget","connector","options","widget","updateState","ngOnInit","instantSearchParent","addWidget","ngOnDestroy","isPlatformBrowser","platformId","removeWidget","getItemClass","item","className","isRefined","Input","VERSION","algoliasearch","algoliasearchProxy.default","algoliasearchProxy","NgAisInstantSearch","EventEmitter","change","emit","results","instantSearchInstance","helper","lastResults","createInstantSearchInstance","config","ngAfterViewInit","start","removeListener","onRender","dispose","searchParameters","highlightPreTag","highlightPostTag","urlSync","routing","searchClient","createAlgoliaClient","client","appId","apiKey","addAlgoliaAgent","undefined","instantsearch","on","refresh","Component","selector","template","decorators","type","Inject","PLATFORM_ID","Output","NgAisBreadcrumb","_super","createURL","items","refine","tslib_1.__extends","defineProperty","autoHideContainer","map","idx","separator","isLast","connectBreadcrumb","attributes","rootPath","handleClick","event","preventDefault","stopPropagation","value","forwardRef","NgAisBreadcrumbModule","NgModule","declarations","entryComponents","exports","imports","CommonModule","NgAisClearRefinements","hasRefinements","connectClearAll","clearsQuery","excludeAttributes","NgAisClearRefinementsModule","NgAisCurrentRefinements","clearAllClick","clearAllURL","refinements","transformItems","reduce","res","_a","attributeName","refinement","e","indexOf","getOwnPropertySymbols","__rest","match","find","r","push","label","charAt","toUpperCase","slice","JSON","stringify","connectCurrentRefinedValues","onlyListedAttributes","handleClearAllClick","NgAisCurrentRefinementsModule","NgAisHierarchicalMenu","connectHierarchicalMenu","limit","showParentLevel","sortBy","NgAisHierarchicalMenuItem","isArray","data","getListClass","lvl","potentialArray","NgAisHierarchicalMenuModule","NgAisHitsPerPage","connectHitsPerPage","NgAisHitsPerPageModule","get","require","NgAisHighlight","attribute","hit","highlighted","replaceWithTagName","attributeHighlighted","_highlightResult","fallback","console","warn","replace","RegExp","tagName","NgAisHighlightModule","NgAisHits","hits","connectHits","escapeHits","ContentChild","TemplateRef","NgAisHitsModule","NgAisInfiniteHits","isLastPage","showMore","connectInfiniteHits","NgAisInfiniteHitsModule","NgAisInstantSearchModule","forRoot","ngModule","providers","HttpClientModule","NgAisMenu","canRefine","canToggleShowMore","isShowingMore","toggleShowMore","connectMenu","showMoreLimit","NgAisMenuModule","NgAisNumericMenu","connectNumericRefinementList","NgAisNumericMenuModule","NgAisNumericSelector","currentRefinement","connectNumericSelector","operator","NgAisNumericSelectorModule","range","NgAisPagination","nbHits","nbPages","pagesArray","apply","Number","pagesPadding","padding","minDelta","maxDelta","Math","abs","connectPagination","maxPages","totalPages","page","NgAisPaginationModule","NgAisRangeSlider","min","max","animate","behaviour","connect","step","tooltips","to","formatTooltip","pips","density","mode","stepped","values","slider","noUiSlider.create","sliderContainer","nativeElement","noUiSlider","handleChange","disabled","updateOptions","toFixed","precision","pow","connectRange","ViewChild","NgAisRangeSliderModule","NgAisRefinementList","searchForItems","isFormSearch","connectRefinementList","escapeFacetValues","NgAisFacetsSearch","searchQuery","search","handleSubmit","NgAisRefinementListModule","NgAisSearchBox","query","connectSearchBox","searchAsYouType","submit","handleReset","reset","NgAisSearchBoxModule","NgAisSortBy","connectSortBySelector","indices","NgAisSortByModule","NgAisRatingMenu","hasNoResults","connectStarRating","NgAisRatingMenuModule","NgAisStats","hitPerPage","processingTimeMS","connectStats","NgAisStatsModule","NgAisToggle","off","connectToggle","NgAisToggleModule","NgAisRangeInput","target","minInputValue","maxInputValue","NgAisRangeInputModule","NgAisPanel","NgAisPanelModule","NgAisConfigure","connectConfigure","ngOnChanges","changes","isFirstChange","currentValue","NgAisConfigureModule","encode","encodeProxy.default","encodeProxy","createSSRSearchClient","httpClient","HttpHeaders","transferState","makeStateKey","_request","rawUrl","opts","headers","set","method","url","includes","transferStateKey","body","hasKey","resp","parse","statusCode","status","reject","request","observe","subscribe","NGIS_MODULES","NgAisModule","NgAisRootModule","_","req","split","AlgoliaSearchHelper","getConfigurationFromQueryString"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    if (element) {\n      const scoppedWidgetName = `ais-${widgetName}-${element}`;\n\n      // output `ais-Widget-Header|Body|Footer ais-Header|Body|Footer`\n      if (element === \"header\" || element === \"body\" || element === \"footer\") {\n        const nonScoppedWidgetName = `ais-${element}`;\n        return `${scoppedWidgetName} ${nonScoppedWidgetName}`;\n      }\n\n      // output `ais-Widget-Xyz--abc`\n      if (subElement) {\n        return `${scoppedWidgetName}--${subElement}`;\n      }\n\n      // output `ais-Widget-Xyz`\n      return scoppedWidgetName;\n    }\n\n    // output `ais-Widget`\n    return `ais-${widgetName}`;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === \"string\" ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import { Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\nimport { NgAisInstantSearch } from \"./instantsearch/instantsearch\";\nimport { bem, noop } from \"./utils\";\n\nexport class Widget {\n  public init: () => void;\n  public getConfiguration: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  public instantSearchParent: any;\n\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: object = {};\n  public cx: Function;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    // add widget to the InstantSearch Instance\n    this.instantSearchParent.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchParent.platformId)) {\n      this.instantSearchParent.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  // helper method for genering item list className\n  public getItemClass(item: { isRefined?: boolean }) {\n    let className = this.cx(\"item\");\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx(\"item\", \"selected\")}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = \"2.0.3\";\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID\n} from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\n\nimport * as algoliasearchProxy from \"algoliasearch/lite\";\nimport instantsearch from \"instantsearch.js/es\";\n\nimport { Widget } from \"../base-widget\";\nimport { VERSION } from \"../version\";\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type SearchRequest = {\n  indexName: string;\n  params: SearchRequestParameters;\n};\n\nexport type SearchForFacetValuesRequest = {\n  indexName: string;\n  params: SearchForFacetValuesRequestParameters;\n};\n\n// Documentation: https://www.algolia.com/doc/api-reference/search-api-parameters/\nexport type SearchParameters = {\n  // Attributes\n  attributesToRetrieve?: string[];\n  restrictSearchableAttributes?: string[];\n\n  // Filtering\n  filters?: string;\n  facetFilters?: string[];\n  optionalFilters?: string[];\n  numericFilters?: string[];\n  sumOrFiltersScores?: boolean;\n\n  // Faceting\n  facets?: string[];\n  maxValuesPerFacet?: number;\n  facetingAfterDistinct?: boolean;\n  sortFacetValuesBy?: string;\n\n  // Highlighting / Snippeting\n  attributesToHighlight?: string[];\n  attributesToSnippet?: string[];\n  highlightPreTag?: string;\n  highlightPostTag?: string;\n  snippetEllipsisText?: string;\n  restrictHighlightAndSnippetArrays?: boolean;\n\n  // Pagination\n  page?: number;\n  hitsPerPage?: number;\n  offset?: number;\n  length?: number;\n\n  // Typos\n  minWordSizefor1Typo?: number;\n  minWordSizefor2Typos?: number;\n  typoTolerance?: string | boolean;\n  allowTyposOnNumericTokens?: boolean;\n  ignorePlurals?: boolean | string[];\n  disableTypoToleranceOnAttributes?: string[];\n\n  // Geo-Search\n  aroundLatLng?: string;\n  aroundLatLngViaIP?: boolean;\n  aroundRadius?: number | \"all\";\n  aroundPrecision?: number;\n  minimumAroundRadius?: number;\n  insideBoundingBox?: GeoRectangle | GeoRectangle[];\n  insidePolygon?: GeoPolygon | GeoPolygon[];\n\n  // Query Strategy\n  queryType?: string;\n  removeWordsIfNoResults?: string;\n  advancedSyntax?: boolean;\n  optionalWords?: string | string[];\n  removeStopWords?: boolean | string[];\n  disableExactOnAttributes?: string[];\n  exactOnSingleWordQuery?: string;\n  alternativesAsExact?: string[];\n\n  // Query Rules\n  enableRules?: boolean;\n  ruleContexts?: string[];\n\n  // Advanced\n  minProximity?: number;\n  responseFields?: string[];\n  maxFacetHits?: number;\n  percentileComputation?: boolean;\n  distinct?: number | boolean;\n  getRankingInfo?: boolean;\n  clickAnalytics?: boolean;\n  analytics?: boolean;\n  analyticsTags?: string[];\n  synonyms?: boolean;\n  replaceSynonymsInHighlight?: boolean;\n};\n\nexport interface SearchRequestParameters extends SearchParameters {\n  query: string;\n}\n\nexport interface SearchForFacetValuesRequestParameters\n  extends SearchParameters {\n  facetQuery: string;\n  facetName: string;\n}\n\nexport type GeoRectangle = [number, number, number, number];\nexport type GeoPolygon = [number, number, number, number, number, number];\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-multiple-indexes\nexport type SearchResponse = {\n  hits: Hit[];\n  page?: number;\n  nbHits?: number;\n  nbPages?: number;\n  hitsPerPage?: number;\n  processingTimeMS?: number;\n  query?: string;\n  params?: string;\n  index?: string;\n};\n\nexport type Hit = {\n  _highlightResult?: object;\n};\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-for-facet-values\nexport type SearchForFacetValuesResponse = {\n  value: string;\n  highlighted?: string;\n  count?: number;\n};\n\nexport type SearchClient = {\n  search: (requests: SearchRequest[]) => Promise<{ results: SearchResponse[] }>;\n  searchForFacetValues?: (\n    requests: SearchForFacetValuesRequest[]\n  ) => Promise<{ facetHits: SearchForFacetValuesResponse[] }>;\n};\n\nexport type InstantSearchConfig = {\n  appId?: string;\n  apiKey?: string;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: () => void;\n  createAlgoliaClient?: (\n    algoliasearch: Function,\n    appId: string,\n    apiKey: string\n  ) => object;\n  searchClient?: SearchClient;\n  searchParameters?: SearchParameters | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n  routing?:\n    | boolean\n    | {\n        stateMapping?: {\n          stateToRoute(object): object;\n          routeToState(object): object;\n        };\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public refresh: () => void;\n  public dispose: () => void;\n}\n\n@Component({\n  selector: \"ais-instantsearch\",\n  template: `<ng-content></ng-content>`\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = \"default\";\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener(\"render\", this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: \"__ais-highlight__\",\n      highlightPostTag: \"__/ais-highlight__\"\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      if (typeof config.urlSync !== \"undefined\") delete config.urlSync;\n      if (typeof config.routing !== \"undefined\") delete config.routing;\n    }\n\n    // custom algolia client agent\n    if (!config.searchClient && !config.createAlgoliaClient) {\n      const client = algoliasearch(config.appId, config.apiKey);\n      client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n      config.searchClient = client;\n      config.appId = undefined;\n      config.apiKey = undefined;\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on(\"render\", this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state\n    });\n  };\n}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\nimport { connectBreadcrumb } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type BreadcrumbState = {\n  createURL: Function;\n  items: BreadcrumbItem[];\n  refine: Function;\n};\n\nexport type BreadcrumbItem = {\n  name: string;\n  value: string;\n};\n\n@Component({\n  selector: \"ais-breadcrumb\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [class]=\"cx('item', item.isLast ? 'selected' : undefined)\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.name}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.name}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisBreadcrumb extends BaseWidget {\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public rootPath?: string;\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1\n    }));\n  }\n\n  public state: BreadcrumbState = {\n    createURL: noop,\n    items: [],\n    refine: noop\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Breadcrumb\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, item: BreadcrumbItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisBreadcrumb } from \"./breadcrumb\";\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule]\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\nimport { connectClearAll } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-clear-refinements\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{buttonLabel}}\n      </button>\n    </div>\n  `\n})\nexport class NgAisClearRefinements extends BaseWidget {\n  @Input() public buttonLabel: string = \"Clear refinements\";\n  @Input() public clearsQuery: boolean = false;\n  @Input() public excludeAttributes: string[] = [];\n\n  public state = {\n    hasRefinements: false,\n    refine: noop\n  };\n\n  get isHidden() {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"ClearRefinements\");\n  }\n\n  public ngOnInit() {\n    // we need to `createWidget` from `ngOnInit` to have `@Input()` intialized\n    this.createWidget(connectClearAll, {\n      clearsQuery: this.clearsQuery,\n      excludeAttributes: this.excludeAttributes\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisClearRefinements } from \"./clear-refinements\";\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule]\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectCurrentRefinedValues } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop, capitalize } from \"../utils\";\n\nexport type CurrentRefinementsState = {\n  attributes: {};\n  clearAllClick: Function;\n  clearAllURL: Function;\n  createURL: Function;\n  refine: Function;\n  refinements: {}[];\n};\n\n@Component({\n  selector: \"ais-current-refinements\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'before' || clearRefinements === true\">\n        {{clearRefinementsLabel}}\n      </button>\n\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let refinement of refinements\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{refinement.label}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let item of refinement.items\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{item.name}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, item)\">â</button>\n          </span>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'after'\">\n        {{clearRefinementsLabel}}\n      </button>\n    </div>\n  `\n})\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // render options\n  @Input() public clearRefinements: \"before\" | \"after\" | boolean = \"after\";\n  @Input() public clearRefinementsLabel: string = \"Clear refinements\";\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public onlyListedAttributes: boolean = false;\n  @Input() public clearsQuery: boolean = false;\n  @Input()\n  public attributes: {\n    name: string;\n    label: string;\n  }[] = [];\n\n  public state: CurrentRefinementsState = {\n    attributes: {},\n    clearAllClick: noop,\n    clearAllURL: noop,\n    createURL: noop,\n    refine: noop,\n    refinements: []\n  };\n\n  get isHidden() {\n    return this.state.refinements.length === 0 && this.autoHideContainer;\n  }\n\n  get refinements() {\n    const items =\n      typeof this.transformItems === \"function\"\n        ? this.transformItems(this.state.refinements)\n        : this.state.refinements;\n\n    // group refinements by category? (attributeName && type)\n    return items.reduce((res, { type, attributeName, ...refinement }) => {\n      const match = res.find(\n        r => r.attributeName === attributeName && r.type === type\n      );\n      if (match) {\n        match.items.push({ type, attributeName, ...refinement });\n      } else {\n        res.push({\n          type,\n          attributeName,\n          label: capitalize(attributeName),\n          items: [{ type, attributeName, ...refinement }]\n        });\n      }\n      return res;\n    }, []);\n  }\n\n  get json() {\n    return JSON.stringify(this.refinements, null, 4);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"CurrentRefinements\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinedValues, {\n      attributes: this.attributes,\n      clearsQuery: this.clearsQuery,\n      onlyListedAttributes: this.onlyListedAttributes\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n\n  public handleClearAllClick(event: MouseEvent) {\n    event.preventDefault();\n    this.state.clearAllClick();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisCurrentRefinements } from \"./current-refinements\";\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule]\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectHierarchicalMenu } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\nexport type HierarchicalMenuState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: \"ais-hierarchical-menu\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisHierarchicalMenu extends BaseWidget {\n  // render option\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public separator?: string = \" > \";\n  @Input() public rootPath?: string;\n  @Input() public showParentLevel?: boolean;\n  @Input() public limit?: number | string = 10;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: HierarchicalMenuState = {\n    createURL: noop,\n    items: [],\n    refine: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return typeof this.transformItems === \"function\"\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"HierarchicalMenu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { bem } from \"../utils\";\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[];\n};\n\n@Component({\n  selector: \"ais-hierarchical-menu-item\",\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass(item)\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: (string) => void;\n  @Input() public createURL: (string) => string;\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem(\"HierarchicalMenu\");\n\n  public getItemClass(item) {\n    let className = this.cx(\"item\");\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx(\"item\", \"selected\")}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx(\"item\", \"parent\")}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(item) {\n    return `${this.cx(\"list\")} ${this.cx(\"list\", \"child\")} ${this.cx(\n      \"list\",\n      \"lvl\" + this.lvl\n    )}`;\n  }\n\n  public isArray(potentialArray: any) {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHierarchicalMenu } from \"./hierarchical-menu\";\nimport { NgAisHierarchicalMenuItem } from \"./hierarchical-menu-item\";\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule]\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectHitsPerPage } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type ResultsPerPageState = {\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: \"ais-hits-per-page\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `\n})\nexport class NgAisHitsPerPage extends BaseWidget {\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n    default?: boolean;\n  }[];\n\n  public state: ResultsPerPageState = {\n    items: [],\n    refine: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"HitsPerPage\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, { items: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHitsPerPage } from \"./hits-per-page\";\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule]\n})\nexport class NgAisHitsPerPageModule {}\n","const get = require(\"lodash/get\");\nimport { Component, Input } from \"@angular/core\";\nimport { bem } from \"../utils\";\n\n@Component({\n  selector: \"ais-highlight\",\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = \"em\";\n\n  cx = bem(\"Highlight\");\n\n  get content() {\n    if (this.attribute === \"highlighted\") {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty(\"_highlightResult\")) {\n      const attributeHighlighted = get(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === \"string\"\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = get(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return \"\";\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp(\"<em>\", \"g\"),\n        `<${this.tagName} class=\"${this.cx(\"highlighted\")}\">`\n      )\n      .replace(new RegExp(\"</em>\", \"g\"), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHighlight } from \"./highlight\";\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule]\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef\n} from \"@angular/core\";\n\nimport { connectHits } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\n\n@Component({\n  selector: \"ais-hits\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class NgAisHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: TemplateRef<any>;\n\n  // render options\n  @Input() transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: { hits: {}[]; results: {} } = { hits: [], results: {} };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Hits\");\n    this.createWidget(connectHits, { escapeHits: true });\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === \"function\"\n          ? this.transformItems(state.hits)\n          : state.hits\n    };\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHighlightModule } from \"../highlight/highlight.module\";\nimport { NgAisHits } from \"./hits\";\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule]\n})\nexport class NgAisHitsModule {}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef\n} from \"@angular/core\";\n\nimport { connectInfiniteHits } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-infinite-hits\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [class]=\"cx('showMore')\"\n        (click)=\"showMore($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `\n})\nexport class NgAisInfiniteHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: any;\n\n  // render options\n  @Input() public showMoreLabel: string = \"Show more results\";\n  @Input() public transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: {\n    hits: {}[];\n    isLastPage: boolean;\n    showMore: Function;\n    results: {};\n  } = {\n    hits: [],\n    isLastPage: false,\n    showMore: noop,\n    results: {}\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"InfiniteHits\");\n    this.createWidget(connectInfiniteHits, { escapeHits: true });\n  }\n\n  public showMore(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === \"function\"\n          ? this.transformItems(state.hits)\n          : state.hits\n    };\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHighlightModule } from \"../highlight/highlight.module\";\nimport { NgAisInfiniteHits } from \"./infinite-hits\";\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule]\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { NgAisInstantSearch } from \"./instantsearch\";\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule, HttpClientModule]\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: []\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectMenu } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\nexport type MenuState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n};\n\n@Component({\n  selector: \"ais-menu\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `\n})\nexport class NgAisMenu extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = \"Show more\";\n  @Input() public showLessLabel: string = \"Show less\";\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public limit?: number | string = 10;\n  @Input() public showMoreLimit?: number | string;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: MenuState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx(\"showMore\");\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx(\"showMore\", \"disabled\")}`;\n    }\n\n    return className;\n  }\n\n  get items() {\n    return typeof this.transformItems === \"function\"\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Menu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisMenu } from \"./menu\";\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule]\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectNumericRefinementList } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type NumericRefinementListState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: \"ais-numeric-menu\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisNumericMenu extends BaseWidget {\n  @Input() public attribute: string;\n  @Input()\n  public items: {\n    name: string;\n    start?: number;\n    end?: number;\n  }[];\n\n  public state: NumericRefinementListState = {\n    createURL: noop,\n    items: [],\n    refine: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"NumericMenu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericRefinementList, {\n      attributeName: this.attribute,\n      options: this.items\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisNumericMenu } from \"./numeric-menu\";\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule]\n})\nexport class NgAisNumericMenuModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectNumericSelector } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type NumericSelectorState = {\n  currentRefinement?: string | null;\n  options: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: \"ais-numeric-selector\",\n  template: `\n    <div [class]=\"cx('')\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `\n})\nexport class NgAisNumericSelector extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public operator: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"!=\" = \"=\";\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n  }[];\n\n  public state: NumericSelectorState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"NumericSelector\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericSelector, {\n      attributeName: this.attribute,\n      operator: this.operator,\n      options: this.items\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisNumericSelector } from \"./numeric-selector\";\n\n@NgModule({\n  declarations: [NgAisNumericSelector],\n  entryComponents: [NgAisNumericSelector],\n  exports: [NgAisNumericSelector],\n  imports: [CommonModule]\n})\nexport class NgAisNumericSelectorModule {}\n","const range = require(\"lodash/range\");\nimport { Component, Input, Inject, forwardRef } from \"@angular/core\";\nimport { connectPagination } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-pagination\",\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            â¹â¹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            â¹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            âº\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            âºâº\n          </a>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisPagination extends BaseWidget {\n  // render options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = false;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n  @Input() public padding: number | string = 3;\n\n  // connector optionsw\n  @Input() public totalPages?: number | string;\n\n  public state = {\n    createURL: noop,\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === \"string\"\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));\n      }\n\n      if (maxDelta > nbPages) {\n        return range(\n          currentRefinement - pagesPadding - (maxDelta - nbPages),\n          nbPages\n        );\n      }\n\n      return range(\n        currentRefinement - pagesPadding,\n        currentRefinement + pagesPadding + 1\n      );\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Pagination\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      maxPages: parseNumberInput(this.totalPages)\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisPagination } from \"./pagination\";\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule]\n})\nexport class NgAisPaginationModule {}\n","import { Component, Input, ViewChild, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectRange } from \"instantsearch.js/es/connectors\";\nimport * as noUiSlider from \"nouislider\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\nexport type RangeSliderState = {\n  range: { min: number; max: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: \"ais-range-slider\",\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `\n})\nexport class NgAisRangeSlider extends BaseWidget {\n  @ViewChild(\"sliderContainer\") public sliderContainer: any;\n\n  // render options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  public state: RangeSliderState = {\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1]\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"RangeSlider\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision)\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: \"snap\",\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip }\n        ]\n      };\n\n      if (this.pips === true || typeof this.pips === \"undefined\") {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: \"positions\",\n            stepped: true,\n            values: [0, 50, 100]\n          }\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        \"change\",\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    this.slider.updateOptions({ disabled, range, start });\n  };\n\n  public handleChange = (values: string[] | number[]) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisRangeSlider } from \"./range-slider\";\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule]\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\nimport { connectRefinementList } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n@Component({\n  selector: \"ais-refinement-list\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `\n})\nexport class NgAisRefinementList extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = \"Show more\";\n  @Input() public showLessLabel: string = \"Show less\";\n  @Input() public transformItems?: Function;\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = \"Search here...\";\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public operator: \"or\" | \"and\" = \"or\";\n  @Input() public limit: number | string = 10;\n  @Input() public showMoreLimit: number | string;\n  @Input() public sortBy: string[] | ((item: object) => number);\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"RefinementList\");\n  }\n\n  get items() {\n    return typeof this.transformItems === \"function\"\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy,\n      escapeFacetValues: true\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { bem } from \"../utils\";\n\n@Component({\n  selector: \"ais-facets-search\",\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem(\"SearchBox\");\n\n  public searchQuery = \"\";\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisHighlightModule } from \"../highlight/highlight.module\";\nimport { NgAisRefinementList } from \"./refinement-list\";\nimport { NgAisFacetsSearch } from \"./facets-search\";\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule]\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef\n} from \"@angular/core\";\n\nimport { connectSearchBox } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-search-box\",\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n          (click)=\"handleSubmit($event)\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `\n})\nexport class NgAisSearchBox extends BaseWidget {\n  @Input() public placeholder: string = \"Search\";\n  @Input() public submitTitle: string = \"Submit\";\n  @Input() public resetTitle: string = \"Reset\";\n  @Input() public searchAsYouType: boolean = true;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state = {\n    query: \"\",\n    refine: noop\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"SearchBox\");\n    this.createWidget(connectSearchBox);\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: MouseEvent) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.state.query);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine(\"\");\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisSearchBox } from \"./search-box\";\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule]\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectSortBySelector } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-sort-by\",\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `\n})\nexport class NgAisSortBy extends BaseWidget {\n  @Input()\n  public items: {\n    name: string;\n    label: string;\n  }[];\n\n  public state: {\n    currentRefinement: string | null;\n    options: {}[];\n    refine: Function;\n  } = {\n    currentRefinement: null,\n    options: [],\n    refine: noop\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"SortBy\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBySelector, { indices: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisSortBy } from \"./sort-by\";\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule]\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectStarRating } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type RatingMenuState = {\n  createURL: Function;\n  hasNoResults: boolean;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: \"ais-rating-menu\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon')\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisRatingMenu extends BaseWidget {\n  // render options\n  @Input() public andUpLabel: string = \"& Up\";\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public max?: number = 5;\n\n  public state: RatingMenuState = {\n    createURL: noop,\n    hasNoResults: false,\n    items: [],\n    refine: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"RatingMenu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectStarRating, {\n      attributeName: this.attribute,\n      max: this.max\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisRatingMenu } from \"./rating-menu\";\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule]\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef\n} from \"@angular/core\";\n\nimport { connectStats } from \"instantsearch.js/es/connectors\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\n\n@Component({\n  selector: \"ais-stats\",\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `\n})\nexport class NgAisStats extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: \"\"\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Stats\");\n    this.createWidget(connectStats);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisStats } from \"./stats\";\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule]\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectToggle } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\nexport type ToggleState = {\n  createURL: Function;\n  refine: Function;\n  value: {\n    name?: string;\n    count?: number;\n    isRefined?: boolean;\n  };\n};\n\n@Component({\n  selector: \"ais-toggle\",\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"cx('item')\"\n          (click)=\"handleClick($event)\">\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{state.value.name}}\"\n              [checked]=\"state.value.isRefined\"\n            />\n\n            <span [class]=\"cx('labelText')\">\n              {{label || state.value.name}}\n            </span>\n\n            <span [class]=\"cx('count')\">{{state.value.count}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class NgAisToggle extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public label: string;\n  @Input()\n  public values: { on?: boolean; off?: boolean } = { on: true, off: undefined };\n\n  public state: ToggleState = {\n    createURL: noop,\n    refine: noop,\n    value: {}\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"ToggleRefinement\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggle, {\n      attributeName: this.attribute,\n      label: this.label,\n      values: this.values\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisToggle } from \"./toggle\";\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule]\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef } from \"@angular/core\";\n\nimport { connectRange } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput, noop } from \"../utils\";\n\nexport type NumericRangeState = {\n  range: { min?: number; max?: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: \"ais-range-input\",\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'min')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'max')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `\n})\nexport class NgAisRangeInput extends BaseWidget {\n  // render options\n  @Input() public currency: string = \"$\";\n  @Input() public separator: string = \"to\";\n  @Input() public submitLabel: string = \"Go\";\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  // inner state\n  public minInputValue?: number | string = \"\";\n  public maxInputValue?: number | string = \"\";\n\n  get step() {\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0]\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"RangeInput\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision)\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === \"min\") {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisRangeInput } from \"./range-input\";\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule]\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"ais-panel\",\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisPanel } from \"./panel\";\nexport { NgAisPanel } from \"./panel\";\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule]\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  SimpleChanges\n} from \"@angular/core\";\n\nimport { connectConfigure } from \"instantsearch.js/es/connectors\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { noop } from \"../utils\";\n\n@Component({\n  selector: \"ais-configure\",\n  template: \"\"\n})\nexport class NgAisConfigure extends BaseWidget {\n  @Input() searchParameters: {} = {};\n\n  public state: { refine: Function } = {\n    refine: noop\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super(\"Configure\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.searchParameters\n    });\n    super.ngOnInit();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!changes.searchParameters.isFirstChange) {\n      this.state.refine(changes.searchParameters.currentValue);\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NgAisConfigure } from \"./configure\";\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule]\n})\nexport class NgAisConfigureModule {}\n","import * as algoliasearchProxy from \"algoliasearch/index\";\nimport * as encodeProxy from \"querystring-es3/encode\";\n\nimport { VERSION } from \"./version\";\n\n// AOT + Rollup workaround\n// https://github.com/rollup/rollup/issues/1267#issuecomment-296395734\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRAlgoliaClient({\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey\n}) {\n  console.warn(\n    \"`createSSRAlgoliaClient` is deprecated in favor of `createSSRSearchClient` to be plugged to `searchClient`.\"\n  );\n\n  return (_, appId, apiKey) =>\n    createSSRSearchClient({\n      appId,\n      apiKey,\n      httpClient,\n      HttpHeaders,\n      transferState,\n      makeStateKey\n    });\n}\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey\n}) {\n  const client = algoliasearch(appId, apiKey, {});\n  client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n  client._request = (rawUrl, opts) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      \"content-type\",\n      opts.method === \"POST\"\n        ? \"application/x-www-form-urlencoded\"\n        : \"application/json\"\n    );\n\n    headers = headers.set(\"accept\", \"application/json\");\n\n    const url =\n      rawUrl + (rawUrl.includes(\"?\") ? \"&\" : \"?\") + encode(opts.headers);\n\n    const transferStateKey = makeStateKey(`ngais(${opts.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const resp = JSON.parse(transferState.get(transferStateKey, {}));\n      return Promise.resolve({\n        statusCode: resp.status,\n        body: resp.body,\n        headers: resp.headers\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(opts.method, url, {\n          headers,\n          body: opts.body,\n          observe: \"response\"\n        })\n        .subscribe(\n          resp => {\n            transferState.set(transferStateKey, JSON.stringify(resp));\n            resolve({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers\n            });\n          },\n          resp =>\n            reject({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers\n            })\n        );\n    });\n  };\n\n  return client;\n}\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\n\n// Modules\nimport { NgAisBreadcrumbModule } from \"./breadcrumb/breadcrumb.module\";\nimport { NgAisClearRefinementsModule } from \"./clear-refinements/clear-refinements.module\";\nimport { NgAisCurrentRefinementsModule } from \"./current-refinements/current-refinements.module\";\nimport { NgAisHierarchicalMenuModule } from \"./hierarchical-menu/hierarchical-menu.module\";\nimport { NgAisHitsPerPageModule } from \"./hits-per-page/hits-per-page.module\";\nimport { NgAisHitsModule } from \"./hits/hits.module\";\nimport { NgAisInfiniteHitsModule } from \"./infinite-hits/infinite-hits.module\";\nimport { NgAisInstantSearchModule } from \"./instantsearch/instantsearch.module\";\nimport { NgAisMenuModule } from \"./menu/menu.module\";\nimport { NgAisNumericMenuModule } from \"./numeric-menu/numeric-menu.module\";\nimport { NgAisNumericSelectorModule } from \"./numeric-selector/numeric-selector.module\";\nimport { NgAisPaginationModule } from \"./pagination/pagination.module\";\nimport { NgAisRangeSliderModule } from \"./range-slider/range-slider.module\";\nimport { NgAisRefinementListModule } from \"./refinement-list/refinement-list.module\";\nimport { NgAisSearchBoxModule } from \"./search-box/search-box.module\";\nimport { NgAisSortByModule } from \"./sort-by/sort-by.module\";\nimport { NgAisRatingMenuModule } from \"./rating-menu/rating-menu.module\";\nimport { NgAisStatsModule } from \"./stats/stats.module\";\nimport { NgAisToggleModule } from \"./toggle/toggle.module\";\nimport { NgAisHighlightModule } from \"./highlight/highlight.module\";\nimport { NgAisRangeInputModule } from \"./range-input/range-input.module\";\nimport { NgAisPanelModule } from \"./panel/panel.module\";\nimport { NgAisConfigureModule } from \"./configure/configure.module\";\n\n// Custom SSR algoliasearchClient\nimport {\n  createSSRAlgoliaClient,\n  createSSRSearchClient\n} from \"./create-ssr-algolia-client\";\nexport { createSSRAlgoliaClient, createSSRSearchClient };\n\nimport { parseServerRequest } from \"./parse-server-request\";\nexport { parseServerRequest };\n\n// Custom widget with BaseWidget class\nimport { BaseWidget } from \"./base-widget\";\nexport { BaseWidget };\n\nimport { NgAisInstantSearch } from \"./instantsearch/instantsearch\";\nexport { NgAisInstantSearch };\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericSelectorModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()]\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgAisRootModule };\n  }\n}\n","import { AlgoliaSearchHelper } from \"algoliasearch-helper\";\n\n// Transforms url query to SearchParameters\nexport function parseServerRequest(req: { url: string } | void) {\n  if (req && req.url && req.url.includes(\"?\")) {\n    const query = req.url.split(\"?\")[1];\n    return AlgoliaSearchHelper.getConfigurationFromQueryString(query);\n  }\n\n  return {};\n}\n"]}