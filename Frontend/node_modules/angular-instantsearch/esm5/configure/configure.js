/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Inject, forwardRef } from "@angular/core";
import { connectConfigure } from "instantsearch.js/es/connectors";
import { BaseWidget } from "../base-widget";
import { NgAisInstantSearch } from "../instantsearch/instantsearch";
import { noop } from "../utils";
var NgAisConfigure = /** @class */ (function (_super) {
    tslib_1.__extends(NgAisConfigure, _super);
    function NgAisConfigure(instantSearchParent) {
        var _this = _super.call(this, "Configure") || this;
        _this.instantSearchParent = instantSearchParent;
        _this.searchParameters = {};
        _this.state = {
            refine: noop
        };
        return _this;
    }
    /**
     * @return {?}
     */
    NgAisConfigure.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.createWidget(connectConfigure, {
            searchParameters: this.searchParameters
        });
        _super.prototype.ngOnInit.call(this);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    NgAisConfigure.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!changes["searchParameters"].isFirstChange) {
            this.state.refine(changes["searchParameters"].currentValue);
        }
    };
    NgAisConfigure.decorators = [
        { type: Component, args: [{
                    selector: "ais-configure",
                    template: ""
                },] },
    ];
    /** @nocollapse */
    NgAisConfigure.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgAisInstantSearch; }),] }] }
    ]; };
    NgAisConfigure.propDecorators = {
        searchParameters: [{ type: Input }]
    };
    return NgAisConfigure;
}(BaseWidget));
export { NgAisConfigure };
if (false) {
    /** @type {?} */
    NgAisConfigure.prototype.searchParameters;
    /** @type {?} */
    NgAisConfigure.prototype.state;
    /** @type {?} */
    NgAisConfigure.prototype.instantSearchParent;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1pbnN0YW50c2VhcmNoLyIsInNvdXJjZXMiOlsiY29uZmlndXJlL2NvbmZpZ3VyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLE1BQU0sRUFDTixVQUFVLEVBRVgsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxVQUFVLENBQUM7O0lBTUksMENBQVU7SUFPNUMsd0JBRVMsbUJBQXdCO1FBRmpDLFlBSUUsa0JBQU0sV0FBVyxDQUFDLFNBQ25CO1FBSFEseUJBQW1CLEdBQW5CLG1CQUFtQixDQUFLO2lDQVJELEVBQUU7c0JBRUc7WUFDbkMsTUFBTSxFQUFFLElBQUk7U0FDYjs7S0FPQTs7OztJQUVNLGlDQUFROzs7O1FBQ2IsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsRUFBRTtZQUNsQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ3hDLENBQUMsQ0FBQztRQUNILGlCQUFNLFFBQVEsV0FBRSxDQUFDOzs7Ozs7SUFHWixvQ0FBVzs7OztjQUFDLE9BQXNCO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLHFCQUFrQixhQUFhLEVBQUU7WUFDM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxxQkFBa0IsWUFBWSxDQUFDLENBQUM7U0FDMUQ7OztnQkE1QkosU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsRUFBRTtpQkFDYjs7OztnREFTSSxNQUFNLFNBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQzs7O21DQVA3QyxLQUFLOzt5QkFsQlI7RUFpQm9DLFVBQVU7U0FBakMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIEluamVjdCxcbiAgZm9yd2FyZFJlZixcbiAgU2ltcGxlQ2hhbmdlc1xufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBjb25uZWN0Q29uZmlndXJlIH0gZnJvbSBcImluc3RhbnRzZWFyY2guanMvZXMvY29ubmVjdG9yc1wiO1xuaW1wb3J0IHsgQmFzZVdpZGdldCB9IGZyb20gXCIuLi9iYXNlLXdpZGdldFwiO1xuaW1wb3J0IHsgTmdBaXNJbnN0YW50U2VhcmNoIH0gZnJvbSBcIi4uL2luc3RhbnRzZWFyY2gvaW5zdGFudHNlYXJjaFwiO1xuaW1wb3J0IHsgbm9vcCB9IGZyb20gXCIuLi91dGlsc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwiYWlzLWNvbmZpZ3VyZVwiLFxuICB0ZW1wbGF0ZTogXCJcIlxufSlcbmV4cG9ydCBjbGFzcyBOZ0Fpc0NvbmZpZ3VyZSBleHRlbmRzIEJhc2VXaWRnZXQge1xuICBASW5wdXQoKSBzZWFyY2hQYXJhbWV0ZXJzOiB7fSA9IHt9O1xuXG4gIHB1YmxpYyBzdGF0ZTogeyByZWZpbmU6IEZ1bmN0aW9uIH0gPSB7XG4gICAgcmVmaW5lOiBub29wXG4gIH07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChmb3J3YXJkUmVmKCgpID0+IE5nQWlzSW5zdGFudFNlYXJjaCkpXG4gICAgcHVibGljIGluc3RhbnRTZWFyY2hQYXJlbnQ6IGFueVxuICApIHtcbiAgICBzdXBlcihcIkNvbmZpZ3VyZVwiKTtcbiAgfVxuXG4gIHB1YmxpYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNyZWF0ZVdpZGdldChjb25uZWN0Q29uZmlndXJlLCB7XG4gICAgICBzZWFyY2hQYXJhbWV0ZXJzOiB0aGlzLnNlYXJjaFBhcmFtZXRlcnNcbiAgICB9KTtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICB9XG5cbiAgcHVibGljIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoIWNoYW5nZXMuc2VhcmNoUGFyYW1ldGVycy5pc0ZpcnN0Q2hhbmdlKSB7XG4gICAgICB0aGlzLnN0YXRlLnJlZmluZShjaGFuZ2VzLnNlYXJjaFBhcmFtZXRlcnMuY3VycmVudFZhbHVlKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==